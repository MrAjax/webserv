------WebKitFormBoundary3acyJQK1OApTdeFz
Content-Disposition: form-data; name="fileToUpload"; filename="message.txt"
Content-Type: text/plain

valgrind ./webserv config    
==2045431== Memcheck, a memory error detector
==2045431== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==2045431== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==2045431== Command: ./webserv config
==2045431== 
Webserv is running...==2045431== Conditional jump or move depends on uninitialised value(s)
==2045431==    at 0x406273: main (main.cpp:170)
==2045431== 
Webserv is running...==2045431== Invalid read of size 8
==2045431==    at 0x484FEC7: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9d0 is 0 bytes after a block of size 64 alloc'd
==2045431==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x42050F: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:121)
==2045431==    by 0x41FECF: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==2045431==    by 0x41FB01: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==2045431==    by 0x41F312: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==2045431==    by 0x41EECD: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==2045431==    by 0x41E9F5: addingNewClient(HttpRequest**, sockaddr_in&, std::map<int, Server*, std::less<int>, std::allocator<std::pair<int const, Server*> > >&, std::_Rb_tree_iterator<std::pair<int const, Server*> >&, std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&) (MainLoop.cpp:43)
==2045431==    by 0x4064E3: main (main.cpp:188)
==2045431== 
==2045431== Invalid read of size 8
==2045431==    at 0x484FECF: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9d8 is 8 bytes after a block of size 64 alloc'd
==2045431==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x42050F: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:121)
==2045431==    by 0x41FECF: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==2045431==    by 0x41FB01: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==2045431==    by 0x41F312: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==2045431==    by 0x41EECD: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==2045431==    by 0x41E9F5: addingNewClient(HttpRequest**, sockaddr_in&, std::map<int, Server*, std::less<int>, std::allocator<std::pair<int const, Server*> > >&, std::_Rb_tree_iterator<std::pair<int const, Server*> >&, std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&) (MainLoop.cpp:43)
==2045431==    by 0x4064E3: main (main.cpp:188)
==2045431== 
==2045431== Invalid write of size 8
==2045431==    at 0x484FED3: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9d0 is 0 bytes after a block of size 64 alloc'd
==2045431==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x42050F: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:121)
==2045431==    by 0x41FECF: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==2045431==    by 0x41FB01: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==2045431==    by 0x41F312: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==2045431==    by 0x41EECD: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==2045431==    by 0x41E9F5: addingNewClient(HttpRequest**, sockaddr_in&, std::map<int, Server*, std::less<int>, std::allocator<std::pair<int const, Server*> > >&, std::_Rb_tree_iterator<std::pair<int const, Server*> >&, std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&) (MainLoop.cpp:43)
==2045431==    by 0x4064E3: main (main.cpp:188)
==2045431== 
==2045431== Invalid read of size 8
==2045431==    at 0x484FEB4: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9e0 is 16 bytes after a block of size 64 alloc'd
==2045431==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x42050F: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:121)
==2045431==    by 0x41FECF: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==2045431==    by 0x41FB01: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==2045431==    by 0x41F312: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==2045431==    by 0x41EECD: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==2045431==    by 0x41E9F5: addingNewClient(HttpRequest**, sockaddr_in&, std::map<int, Server*, std::less<int>, std::allocator<std::pair<int const, Server*> > >&, std::_Rb_tree_iterator<std::pair<int const, Server*> >&, std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&) (MainLoop.cpp:43)
==2045431==    by 0x4064E3: main (main.cpp:188)
==2045431== 
==2045431== Invalid write of size 8
==2045431==    at 0x484FEBB: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9d8 is 8 bytes after a block of size 64 alloc'd
==2045431==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x42050F: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:121)
==2045431==    by 0x41FECF: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==2045431==    by 0x41FB01: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==2045431==    by 0x41F312: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==2045431==    by 0x41EECD: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==2045431==    by 0x41E9F5: addingNewClient(HttpRequest**, sockaddr_in&, std::map<int, Server*, std::less<int>, std::allocator<std::pair<int const, Server*> > >&, std::_Rb_tree_iterator<std::pair<int const, Server*> >&, std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&) (MainLoop.cpp:43)
==2045431==    by 0x4064E3: main (main.cpp:188)
==2045431== 
==2045431== Invalid read of size 8
==2045431==    at 0x484FEBF: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9e8 is 24 bytes after a block of size 64 in arena "client"
==2045431== 
==2045431== Invalid write of size 8
==2045431==    at 0x484FEC3: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9e0 is 16 bytes after a block of size 64 alloc'd
==2045431==    at 0x4849013: operator new(unsigned long) (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x42050F: __gnu_cxx::new_allocator<pollfd>::allocate(unsigned long, void const*) (new_allocator.h:121)
==2045431==    by 0x41FECF: __gnu_cxx::__alloc_traits<std::allocator<pollfd>, pollfd>::allocate(std::allocator<pollfd>&, unsigned long) (alloc_traits.h:133)
==2045431==    by 0x41FB01: std::_Vector_base<pollfd, std::allocator<pollfd> >::_M_allocate(unsigned long) (stl_vector.h:346)
==2045431==    by 0x41F312: std::vector<pollfd, std::allocator<pollfd> >::_M_realloc_insert(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, pollfd const&) (vector.tcc:440)
==2045431==    by 0x41EECD: std::vector<pollfd, std::allocator<pollfd> >::push_back(pollfd const&) (stl_vector.h:1198)
==2045431==    by 0x41E9F5: addingNewClient(HttpRequest**, sockaddr_in&, std::map<int, Server*, std::less<int>, std::allocator<std::pair<int const, Server*> > >&, std::_Rb_tree_iterator<std::pair<int const, Server*> >&, std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&) (MainLoop.cpp:43)
==2045431==    by 0x4064E3: main (main.cpp:188)
==2045431== 
==2045431== Invalid write of size 8
==2045431==    at 0x484FECB: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  Address 0x4e2d9e8 is 24 bytes after a block of size 64 in arena "client"
==2045431== 
==2045431== 
==2045431== Process terminating with default action of signal 11 (SIGSEGV)
==2045431==  Access not within mapped region at address 0x61D5000
==2045431==    at 0x484FEB4: memcpy@GLIBC_2.2.5 (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)
==2045431==    by 0x4208F0: pollfd* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<pollfd>(pollfd const*, pollfd const*, pollfd*) (stl_algobase.h:426)
==2045431==    by 0x420575: pollfd* std::__copy_move_a2<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:472)
==2045431==    by 0x41FF56: pollfd* std::__copy_move_a1<false, pollfd*, pollfd*>(pollfd*, pollfd*, pollfd*) (stl_algobase.h:506)
==2045431==    by 0x41FBA5: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:513)
==2045431==    by 0x41F52C: __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > std::copy<__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > > >(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >, __gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_algobase.h:569)
==2045431==    by 0x41EF9A: std::vector<pollfd, std::allocator<pollfd> >::_M_erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (vector.tcc:175)
==2045431==    by 0x41EC2A: std::vector<pollfd, std::allocator<pollfd> >::erase(__gnu_cxx::__normal_iterator<pollfd*, std::vector<pollfd, std::allocator<pollfd> > >) (stl_vector.h:1434)
==2045431==    by 0x41E895: killRequest(std::map<int, std::pair<sockaddr_in, HttpRequest*>, std::less<int>, std::allocator<std::pair<int const, std::pair<sockaddr_in, HttpRequest*> > > >&, std::vector<pollfd, std::allocator<pollfd> >&, int) (MainLoop.cpp:30)
==2045431==    by 0x4066FC: main (main.cpp:204)
==2045431==  If you believe this happened as a result of a stack
==2045431==  overflow in your program's main thread (unlikely but
==2045431==  possible), you can try to increase the size of the
==2045431==  main thread stack using the --main-stacksize= flag.
==2045431==  The main thread stack size used in this run was 8388608.
==2045431== 
==2045431== HEAP SUMMARY:
==2045431==     in use at exit: 80,324 bytes in 51 blocks
==2045431==   total heap usage: 33,493 allocs, 33,442 frees, 14,999,201 bytes allocated
==2045431== 
==2045431== LEAK SUMMARY:
==2045431==    definitely lost: 0 bytes in 0 blocks
==2045431==    indirectly lost: 0 bytes in 0 blocks
==2045431==      possibly lost: 0 bytes in 0 blocks
==2045431==    still reachable: 80,324 bytes in 51 blocks
==2045431==         suppressed: 0 bytes in 0 blocks
==2045431== Rerun with --leak-check=full to see details of leaked memory
==2045431== 
==2045431== Use --track-origins=yes to see where uninitialised values come from
==2045431== For lists of detected and suppressed errors, rerun with: -s
==2045431== ERROR SUMMARY: 5151812 errors from 9 contexts (suppressed: 0 from 0)
[1]    2045431 segmentation fault (core dumped)  valgrind ./webserv config
------WebKitFormBoundary3acyJQK1OApTdeFz
Content-Disposition: form-data; name="submit"

Upload File
------WebKitFormBoundary3acyJQK1OApTdeFz--

